# -*- mode: ruby -*-
# vi: set ft=ruby :

#vboxmanage list vms

#"开发公司服务器199


#vagrant package --base "开发公司服务器198" {256372da-acaf-4afb-8a03-a295e44c3ae1} --output  开发公司服务器198
Vagrant.require_version ">= 1.8.1"

Vagrant.configure("2") do |config|
    config.vagrant.host = :detect

    config.vm.boot_timeout = 30000
    config.vm.box = "dev-m"
    #config.vm.box = "trusty-x64-desktop/5.0.16"
    #config.vm.box_check_update = true
    #config.vm.box_download_checksum = "187bc62f1383c5a07a5f83cac4c50a43"
    #config.vm.box_download_checksum_type = "md5"
    #config.vm.box_url = "default.box"
    
   
    config.vm.graceful_halt_timeout = 60
    config.vm.post_up_message = "长毛是狗总公司100"
    config.vm.usable_port_range = 2200..2250


    #config.vm.network "forwarded_port", guest: 2222, host:2222 
        # config.vm.network "forwarded_port", guest: 9000, host: 9000
         #   config.vm.network "forwarded_port", guest: 6080, host: 6080
   # config.vm.network "forwarded_port", guest: 3306, host:3306 
#config.vm.network "forwarded_port", guest: 8000, host:8000 
#config.vm.network "forwarded_port", guest: 3000, host:3000
#config.vm.network "forwarded_port", guest: 433, host:433


        config.ssh.username = "docker"
    config.ssh.password = "b"

               config.vm.hostname = "default"

       config.vm.network "private_network",ip: "192.168.99.101" 
   
       config.vm.network "public_network", ip: "192.168.99.100",:bridge => 'en0: Wi-Fi (AirPort)'

  config.vm.network  "public_network", ip: "192.168.3.100" ,:bridge => 'en0: Wi-Fi (AirPort)'

#config.vm.network  "public_network", ip: "192.168.0.199" ,:bridge => 'en5: USB 10/100/1000 LAN'

#config.vm.network  "public_network", ip: "192.168.0.199" ,:bridge => 'bridge0'

    

        config.vm.synced_folder "./", "/vagrant"
 
          config.vm.synced_folder "/Volumes/data", "/data"
          config.vm.synced_folder "/Users", "/home/users"
          config.vm.synced_folder "/Volumes/src", "/src"
          config.vm.synced_folder "/Volumes/b", "/b"



    config.vm.provider "virtualbox" do |v|
       # v.gui = true
        v.customize ["modifyvm", :id, "--rtcuseutc", "on"]
        v.customize ["modifyvm", :id, "--hwvirtex", "on"]
        v.customize ["modifyvm", :id, "--nestedpaging", "on"]
        v.customize ["modifyvm", :id, "--vtxvpid", "on"]
        v.customize ["modifyvm", :id, "--largepages", "on"]
        v.customize ["modifyvm", :id, "--acpi", "on"]
           v.customize ["modifyvm", :id, "--groups", "/长毛是狗开发公司"]
           v.customize ["modifyvm", :id, "--name", "default"]
  v.customize ["modifyvm", :id, "--memory", "4048"]
            v.customize ["modifyvm", :id, "--vram", "24"]
            v.customize ["modifyvm", :id, "--cpus", "2"]

    end

    config.vm.provision 'file', source: "bashrc", destination: '~/.bashrc'
    config.vm.provision 'file', source: "ssh/id_rsa.pub", destination: '~/.ssh/id_rsa.pub'
    config.vm.provision 'file', source: "ssh/id_rsa", destination: '~/.ssh/id_rsa'
  

    config.vm.provision :shell,privileged: false,  path: "bootstrap.sh"
  #config.vm.provision :shell, path:   "dockernode-ubuntu.sh"

 config.vm.provision "shell" , inline: <<-SHELL
   #在这里写启动脚本 

    echo " # T在这凯配置网络和ip
          # and how to activate them. For more information, see interfaces(5).
          source /etc/network/interfaces.d/*# The loopback network interface"  > /etc/network/interfaces
          
    echo "   auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet dhcp
pre-up sleep 2
#VAGRANT-BEGIN
# The contents below are automatically generated by Vagrant. Do not modify." >> /etc/network/interfaces
    echo " auto eth1
iface eth1 inet static
      address 192.168.0.210
      netmask 255.255.255.0
#VAGRANT-END

#VAGRANT-BEGIN
# The contents below are automatically generated by Vagrant. Do not modify.
auto eth2
iface eth2 inet static
      address 192.168.99.100
      netmask 255.255.255.0
#VAGRANT-END " >>   /etc/network/interfaces

    echo "#VAGRANT-BEGIN
          # The contents below are automatically generated by Vagrant. Do not modify.
          auto eth3
          iface eth3 inet static
          address 192.168.3.100
          netmask 255.255.255.0
           #VAGRANT-END" >> /etc/network/interfaces


  
SHELL



end
